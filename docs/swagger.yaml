definitions:
  controllers.VerifyToken:
    properties:
      token:
        type: string
    type: object
  models.Asset:
    properties:
      file_id:
        description: 文件标识符
        type: string
      id:
        description: 主键
        type: integer
      name:
        description: 资源名称
        type: string
    type: object
  models.Question:
    properties:
      context:
        type: string
      title:
        type: string
    type: object
  models.Song:
    properties:
      file_id:
        description: 文件标识符
        type: string
      id:
        description: 主键
        type: integer
      title:
        description: 歌曲标题
        type: string
    type: object
  request.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  request.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  request.ScoreRequest:
    properties:
      song_id:
        type: integer
      total_score:
        type: integer
    type: object
  request.VerifyRequest:
    properties:
      code:
        type: string
      email:
        type: string
    type: object
  response.AssetResponse:
    properties:
      asset_id:
        type: string
    type: object
  response.AssetsResponse:
    properties:
      asset_ids:
        items:
          $ref: '#/definitions/models.Asset'
        type: array
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  response.ScoreReponse:
    properties:
      score:
        type: integer
      song_title:
        type: string
      time:
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
  response.SongResponse:
    properties:
      song_id:
        type: string
    type: object
  response.SongsResponse:
    properties:
      song_ids:
        items:
          $ref: '#/definitions/models.Song'
        type: array
    type: object
  response.UploadToken:
    properties:
      upload_token:
        type: string
    type: object
  response.VerificationResponse:
    properties:
      username:
        type: string
    type: object
info:
  contact: {}
  description: 一个打字游戏
  title: NeedForTyping
  version: "1.0"
paths:
  /api/all_assets:
    get:
      consumes:
      - application/json
      description: 查询所有素材的信息
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.AssetsResponse'
                  - properties:
                      Asset_ids:
                        items:
                          $ref: '#/definitions/models.Asset'
                        type: array
                    type: object
              type: object
      summary: 获取所有素材
      tags:
      - 素材
  /api/all_songs:
    get:
      consumes:
      - application/json
      description: 查询所有歌曲信息
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.SongsResponse'
                  - properties:
                      Song_ids:
                        items:
                          $ref: '#/definitions/models.Song'
                        type: array
                    type: object
              type: object
      summary: 获取所有歌曲
      tags:
      - 歌曲
  /api/asset:
    get:
      consumes:
      - application/json
      description: 根据传入的 asset_id 查询素材的 file_id
      parameters:
      - description: 素材ID
        in: query
        name: asset_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.AssetResponse'
              type: object
      summary: 获取单个素材
      tags:
      - 素材
  /api/essay:
    get:
      consumes:
      - application/json
      description: 根据传入的 topic 参数，通过 gRPC 流式调用生成文章，并使用 SSE 向前端实时推送生成结果
      parameters:
      - description: 生成文章的主题
        in: query
        name: topic
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取生成的文章
      tags:
      - 文章
      - SSE
      - gRPC
  /api/get_context:
    get:
      consumes:
      - application/json
      description: 根据问题的标题获取其内容
      parameters:
      - description: 问题标题
        in: query
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: 根据标题获取内容
      tags:
      - 问题
  /api/get_list:
    get:
      consumes:
      - application/json
      description: 获取所有问题的标题列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取问题标题列表
      tags:
      - 问题
  /api/get_upload_token:
    get:
      consumes:
      - application/json
      description: 验证用户令牌并返回上传令牌
      parameters:
      - description: 用户验证令牌
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.VerifyToken'
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UploadToken'
              type: object
      summary: 获取上传令牌
      tags:
      - 上传
  /api/save_question:
    post:
      consumes:
      - application/json
      description: 保存一个包含标题和内容的问题
      parameters:
      - description: 问题数据
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/models.Question'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: 保存问题
      tags:
      - 问题
  /api/score:
    post:
      consumes:
      - application/json
      description: 接收 JSON 格式的总分数据并上传到服务器
      parameters:
      - description: 上传的总分信息
        in: body
        name: totalScore
        required: true
        schema:
          $ref: '#/definitions/request.ScoreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            $ref: '#/definitions/response.Response'
      summary: 上传总分
      tags:
      - 分数
  /api/scores:
    get:
      consumes:
      - application/json
      description: 根据传入的 song_id 查询该歌曲所有的总分记录
      parameters:
      - description: 歌曲ID
        in: query
        name: song_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.ScoreReponse'
                  type: array
              type: object
      summary: 获取歌曲所有总分信息
      tags:
      - 分数
  /api/song:
    get:
      consumes:
      - application/json
      description: 根据传入的 song_id 查询歌曲信息并返回文件ID
      parameters:
      - description: 歌曲ID
        in: query
        name: song_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SongResponse'
              type: object
      summary: 获取歌曲信息
      tags:
      - 歌曲
  /api/update_list_asset:
    get:
      consumes:
      - application/json
      description: 更新素材列表信息
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            $ref: '#/definitions/response.Response'
      summary: 更新素材列表
      tags:
      - 素材
  /api/update_list_song:
    get:
      consumes:
      - application/json
      description: 更新歌曲列表信息
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            $ref: '#/definitions/response.Response'
      summary: 更新歌曲列表
      tags:
      - 歌曲
  /api/user_scores:
    get:
      consumes:
      - application/json
      description: 根据传入的 user_id 查询该用户所有的最佳分数记录
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.ScoreReponse'
                  type: array
              type: object
      summary: 获取用户所有最佳成绩
      tags:
      - 分数
  /user/forget_password:
    get:
      consumes:
      - application/json
      description: 用户通过邮箱请求密码重置，会收到包含重置链接的邮件
      parameters:
      - description: 用户注册邮箱
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            $ref: '#/definitions/response.Response'
      summary: 请求密码重置
      tags:
      - 用户管理
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录，验证用户名和密码，生成 JWT Token
      parameters:
      - description: 用户登录信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户登录接口
      tags:
      - 用户管理
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册接口，接收用户信息创建新用户
      parameters:
      - description: 用户注册信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户注册
      tags:
      - 用户管理
  /user/reset_password:
    get:
      consumes:
      - application/json
      description: 用户通过邮件中提供的 token 进行密码重置
      parameters:
      - description: 密码重置令牌
        in: query
        name: token
        required: true
        type: string
      - description: 用户注册邮箱
        in: query
        name: email
        required: true
        type: string
      - description: 新密码
        in: query
        name: new_password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            $ref: '#/definitions/response.Response'
      summary: 重置密码
      tags:
      - 用户管理
  /user/send_code:
    get:
      description: 生成并向用户邮箱发送验证码
      parameters:
      - description: 邮箱地址
        in: query
        name: email
        required: true
        type: string
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            $ref: '#/definitions/response.Response'
      summary: 发送邮箱验证码
      tags:
      - Verification
  /user/verify_code:
    post:
      consumes:
      - application/json
      description: 验证用户提交的验证码是否有效
      parameters:
      - description: 邮箱和验证码
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 通信成功（通过code来判断具体情况）
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.VerificationResponse'
              type: object
      summary: 验证验证码
      tags:
      - Verification
swagger: "2.0"
